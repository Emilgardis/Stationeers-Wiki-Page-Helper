[instructions]
[instructions."Utility"]
instructions = [{ op = "alias", example = """
    {{MIPSCode|
    alias dAutoHydro1 d0
    alias vTemperature r0
    }}
    """ }, { op = "define", example = """
    {{MIPSCode|
    define ultimateAnswer 42
    move r0 ultimateAnswer # Store 42 in register 0
    }}
    """ }, "hcf", "sleep", "yield"]
[instructions."Mathematical"]
instructions = [
    { op = "abs", example = """
    {{MIPSCode|
    define negativeNumber -10
    abs r0 negativeNumber # Compute the absolute value of -10 and store it in register 0
    }}
    """ },
    { op = "add", example = """
    {{MIPSCode|add r0 r0 1 # increment r0 by one}}
    {{MIPSCode|
    define num1 10
    define num2 20
    add r0 num1 num2 # Add 10 and 20 and store the result in register 0
    }}
    """ },
    { op = "ceil", example = """
    {{MIPSCode|
    define floatNumber 10.3
    ceil r0 floatNumber # Compute the ceiling of 10.3 and store it in register 0
    }}
    """ },
    "div",
    { op = "exp", desc = "exp(a) or e^a" },
    "floor",
    { op = "log", desc = "base e log(a) or ln(a)" },
    "max",
    "min",
    { op = "mod", example = """
    {{MIPSCode|
    mod r0 10 20
    # Expected: r0 = 10

    mod r1 22 20
    # Expected: r1 = 2

    mod r2 22 -20
    # Expected: r2 = 18

    mod r2 22 -10
    # Expected: r2 = 18
    }}
    """ },
    { op = "move", example = """
    {{MIPSCode|move r0 42 # Store 42 in register 0}}
    """ },
    "mul",
    "rand",
    "round",
    "sqrt",
    "sub",
    "trunc",
]
[instructions."Mathematical"."Trigonometric"]
instructions = [
    { op = "acos", desc = "Returns the angle (radians) whos cos is the specified value" },
    "asin",
    "atan",
    "atan2",
    "cos",
    "sin",
    "tan",
]
[instructions."Stack"]
instructions = [
    "clr",
    "get",
    "getd",
    "peek",
    "poke",
    "pop",
    "push",
    "put",
    "putd",
]
[instructions."Slot/Logic"]
instructions = [
    { op = "l", example = """
    Read from the device on d0 into register 0
    {{MIPSCode|l r0 d0 Setting}}
    Read the pressure from a sensor
    {{MIPSCode|l r1 d5 Pressure}}
    This also works with aliases. For example:
    {{MIPSCode|
    alias Sensor d0
    l r0 Sensor Temperature
    }}
    """ },
    "ld",
    "lr",
    { op = "ls", example = """
    Read from the second slot of device on d0, stores 1 in r0 if it's occupied, 0 otherwise.
    {{MIPSCode|ls r0 d0 2 Occupied}}
    And here is the code to read the charge of an AIMeE:
    {{MIPSCode|
    alias robot d0
    alias charge r10
    ls charge robot 0 Charge
    }}
    """ },
    { op = "s", example = """
    {{MIPSCode|
    s d0 Setting r0
    }}
    """ },
    "sd",
    "ss",
]
[instructions."Slot/Logic"."Batched"]
instructions = [{ op = "lb", example = """
    {{MIPSCode|lb r0 HASH("StructureWallLight") On Sum}}
    """ }, "lbn", "lbns", "lbs", { op = "sb", example = """
    {{MIPSCode|sb HASH("StructureWallLight") On 1}}
    """ }, "sbn", "sbs"]
[instructions."Bitwise"]
instructions = [
    "and",
    "nor",
    { op = "not", note = "This is a bitwise operation, the NOT of 1 => -2, etc. You may want to use seqz instead" },
    "or",
    "sla",
    "sll",
    "sra",
    "srl",
    "xor",
]
[instructions."Comparison"]
instructions = [
    { op = "select", note = "This operation can be used as a simple ternary condition", example = """
    {{MIPSCode|
    select r1 r0 10 100
    }}
    """ },
]
[instructions."Comparison"."Device Pin"]
instructions = ["sdns", "sdse"]
[instructions."Comparison"."Value"]
instructions = [
    "sap",
    { op = "sapz", desc = "Register = 1 if abs(a) <= max(b * abs(a), float.epsilon * 8), otherwise 0" },
    "seq",
    "seqz",
    "sge",
    "sgez",
    "sgt",
    "sgtz",
    "sle",
    "slez",
    "slt",
    "sltz",
    "sna",
    "snan",
    "snanz",
    { op = "snaz", desc = "Register = 1 if abs(a) > max(b * abs(a), float.epsilon), otherwise 0" },
    "sne",
    "snez",
]
[instructions."Branching"]
instructions = [{ op = "j", example = """
    {{MIPSCode|j 0 # jump line 0}}
    {{MIPSCode|
    j label # jump to a label

    label:
    # your code here
    }}
    """ }, { op = "jal", example = """
    jal provides a way to do function calls in IC10 mips

    {{MIPSCode|
    move r0 1000
    move r1 0
    start:
    jal average
    s db Setting r0
    yield
    j start

    average:
    add r0 r0 r1
    div r0 r0 2
    j ra # jump back
    }}
    """ }, "jr"]
[instructions."Branching"."Device Pin"]
instructions = ["bdns", "bdnsal", "bdse", { op = "bdseal", example = """
    {{MIPSCode|
    #Store line number and jump to line 32 if d0 is assigned.
    bdseal d0 32
    }}
    {{MIPSCode|
    #Store line in ra and jump to label HarvestCrop if device d0 is assigned.
    bdseal d0 HarvestCrop
    }}
    """ }, "brdns", "brdse"]
[instructions."Branching"."Comparison"]
instructions = [
    "bap",
    "bapal",
    { op = "bapz", desc = "Branch to line c if abs(a) <= max(b * abs(a), float.epsilon * 8)" },
    { op = "bapzal", desc = "Branch to line c if abs(a) <= max(b * abs(a), float.epsilon * 8) and store next line number in ra" },
    "beq",
    "beqal",
    "beqz",
    "beqzal",
    "bge",
    "bgeal",
    "bgez",
    "bgezal",
    { op = "bgt", example = """
    An example of a '''Schmitt''' trigger, turning on a device if the temperature is too low, and turning it off if it's too high and finally
    doing nothing if the temperature is within the desired range.
    {{MIPSCode|
    alias sensor d0
    alias device d1

    define mintemp 293.15
    define maxtemp 298.15

    start:
    yield
    l r0 sensor Temperature
    # If the temperature < mintemp, turn on the device
    blt r0 mintemp turnOn
    # If the temperature > maxtemp, turn off the device
    bgt r0 maxtemp turnOff
    j start

    turnOn:
    s device On 1
    j start
    turnOff:
    s device On 0
    j start
    }}
    """ },
    "bgtal",
    "bgtz",
    "bgtzal",
    "ble",
    "bleal",
    "blez",
    "blezal",
    { op = "blt", example = """
    An example of a '''Schmitt''' trigger, turning on a device if the temperature is too low, and turning it off if it's too high and finally
    doing nothing if the temperature is within the desired range.
    {{MIPSCode|
    alias sensor d0
    alias device d1

    define mintemp 293.15
    define maxtemp 298.15

    start:
    yield
    l r0 sensor Temperature
    # If the temperature < mintemp, turn on the device
    blt r0 mintemp turnOn
    # If the temperature > maxtemp, turn off the device
    bgt r0 maxtemp turnOff
    j start

    turnOn:
    s device On 1
    j start
    turnOff:
    s device On 0
    j start
    }}
    """ },
    "bltal",
    "bltz",
    "bltzal",
    "bna",
    "bnaal",
    "bnan",
    { op = "bnaz", desc = "Branch to line c if abs(a) > max (b * abs(a), float.epsilon * 8)" },
    { op = "bnazal", desc = "Branch to line c if abs(a) > max (b * abs(a), float.epsilon * 8) and store next line number in ra" },
    "bne",
    "bneal",
    "bnez",
    "bnezal",
    "brap",
    { op = "brapz", desc = "Relative branch to line c if abs(a) <= max(b * abs(a), float.epsilon * 8)" },
    "breq",
    "breqz",
    "brge",
    "brgez",
    "brgt",
    "brgtz",
    "brle",
    "brlez",
    "brlt",
    "brltz",
    "brna",
    "brnan",
    { op = "brnaz", desc = "Relative branch to line c if abs(a) > max(b * abs(a), float.epsilon * 8)" },
    "brne",
    "brnez",
]
[instructions."Deprecated"]
instructions = ["label"]
[bot]
api_url = "https://stationeers-wiki.com/api.php"
rest_url = "https://stationeers-wiki.com/rest.php"